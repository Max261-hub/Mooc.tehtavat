#ğŸ§® Harjoitus: Luvun neliÃ¶n laskeminen

#TehtÃ¤vÃ¤ on laskea kolmen luvun neliÃ¶t ja tulostaa ne nÃ¤ytÃ¶lle.

#ğŸ§¾ Osa 1: Ilman funktiota

#Kirjoita tÃ¤mÃ¤ ohjelma ensin ilman funktiota:

print("Luvun neliÃ¶n laskenta")

luku1 = 2
luku2 = 3
luku3 = 4

print(f"{luku1} nelio on {luku1**2}")
print(f"{luku2} nelio on {luku2**2}")
print(f"{luku3} nelio on {luku3**2}")
#ğŸŸ¡ TÃ¤ssÃ¤ ohjelmassa toistuu sama logiikka kolme kertaa â€” joka on vÃ¤hÃ¤n turhaa.

#ğŸ§© Osa 2: Sama ohjelma funktion avulla
#Nyt tehdÃ¤Ã¤n funktio, joka laskee ja tulostaa neliÃ¶n.
#Koodi muuttuu paljon siistimmÃ¤ksi:

def nelio(luku):
    print(f"{luku} nelio on {luku** 2}")

print("Luvun nelio laskenta")
nelio(2)
nelio(3)
nelio(4)
#âœ… Nyt logiikka on yhdessÃ¤ paikassa (funktiossa), 
# ja voimme kÃ¤yttÃ¤Ã¤ sitÃ¤ niin monta kertaa kuin haluamme.


#ğŸ§  Mieti hetki:
#MitÃ¤ hyÃ¶tyÃ¤ oli funktion kÃ¤ytÃ¶stÃ¤ verrattuna ensimmÃ¤iseen versioon?
#MiltÃ¤ koodi nÃ¤yttÃ¤Ã¤, jos lisÃ¤tÃ¤Ã¤n vaikka 100 lukua?
#(Ilman funktiota se olisi todella pitkÃ¤, mutta funktion avulla riittÃ¤Ã¤ yksi rivi per luku.)

#ğŸŒŸ Bonus: Funktio, joka palauttaa arvon
#Jos haluat kÃ¤yttÃ¤Ã¤ laskettua arvoa myÃ¶hemmin, funktio voi myÃ¶s palauttaa sen:
def nelio(luku):
    return luku**2
a = 2
b = 3
print(f"{a} nelio on {nelio(a)}")
print(f"{b} nelio on {nelio(b)}")

tulos = nelio(10)
print(f"Luvun 10 nelio on {tulos}")
    